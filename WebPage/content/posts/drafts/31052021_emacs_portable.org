#+title: Emacs Portable
#+date: <2021-05-19 01:34>
#+AUTHOR: Jorge Benavides M.
#+EMAIL: jorge2@hotmail.es
#+SETUPFILE: ~/projects/blog/public_html/org-html-themes/org/theme-bigblow-local.setup
#+description: DRAFT

* Emacs Portable
  :PROPERTIES:
  :CUSTOM_ID: emacs-portable
  :END:
** Motivación
   :PROPERTIES:
   :CUSTOM_ID: motivaci-n
   :END:
  Siempre he querido usar EMACS en mi ordenador, pero es muy grande e incómodo para escribir (al menos en el autobús) por lo que decidí comprarme un ordenador pequeño, los viejos "netbooks" o algo un poco más mordeno que no superara las 14", fue un fracaso total y me negaba a instalar EMACS en mi ordenador porque Windows es tapar un agujero tras otro, que no digo que EMACS en un pendrive no lo sea pero al menos puedes llevarlo a todas partes, beneficiarte del hardware de cualquier ordenador y sobre todo usarlo en la universidad, así evitaba llevar mi portátil si lo necesitaba para algo.  
Nota: Estoy escribiendo esto desde mientras voy en el metro, en mi portátil incómodo con mi emacs portable.  
** Ventajas y desventajas
   :PROPERTIES:
   :CUSTOM_ID: ventajas-y-desventajas
   :END:
*** Ventajas
    :PROPERTIES:
    :CUSTOM_ID: ventajas
    :END:
    - Evidentemente portabilidad.
    - Rapidez frente a instalar EMACS desde linux portable.
*** Desventajas
    :PROPERTIES:
    :CUSTOM_ID: desventajas
    :END:
    - Solo funciona en sistemas Windows.
    - Fácil de perder, necesita de backups o en su defecto tener una copia fija instalada y todos los cambios copiarlos en el pendrive.
      - Además de virus y software malicioso que puede causarnos grandes problemas.
    - EMACS portable es símbolo de compiladores y software extra portables, no es posible tenerlo todo.
      - Es posible que tu mejor aliado en esta travesía sea [[https://portableapps.com/]].
    Aunque las desventajas sean mayores que las ventajas, me parece algo útil  además de interesante,ya que puede sacarnos de un apuro, *no lo recomiendo para un uso diario y continuo*.
** Sobre el hardware
   :PROPERTIES:
   :CUSTOM_ID: sobre-el-hardware
   :END:
   Para esta tarea he usado un pendrive clásico, *Kingston de 16Gb*, no tiene botón antiescritura ni cifrado ni nada parecido.
   [[color:blue][#Adjuntar foto]]
** Sobre el software
   :PROPERTIES:
   :CUSTOM_ID: sobre-el-software
   :END:
*** ¿Cómo empezar?
    :PROPERTIES:
    :CUSTOM_ID: c-mo-empezar
    :END:
   Para empezar debemos descargar los binarios de EMACS en ..., los metemos en un pendrive y listo ya es portable... Ahora debemos asegurarnos de que funcione desde el pendrive para esto debemos cambiar el *HOME* que se hace con un pequeño script en batch.
  #+ATTR_LATEX: :options style=monokai,frame=lines,framesep=2mm,bgcolor=black,fontsize=\footnotesize,linenos
  #+begin_src shell :exports code :results none
set HOME=%~dp0..\..\emacshome
"%~dp0runemacs.exe" %*
  #+end_src

** Referencias
   :PROPERTIES:
   :CUSTOM_ID: referencias
   :END:
 - https://www.emacswiki.org/emacs/EmacsPortableApp

* Código test
  :PROPERTIES:
  :CUSTOM_ID: c-digo-test
  :END:
#+ATTR_LATEX: :options style=monokai,frame=lines,framesep=2mm,bgcolor=black,fontsize=\footnotesize,linenos
#+begin_src python :exports code :results output
a = 2+3
print("Hello World, I am in python", a)
#+end_src

#+RESULTS:
: Hello World, I am in python 5


#+begin_src octave :exports code
n = [1:10];
x = 5*n+15000;
ans = x
#+end_src

#+RESULTS:
| 15005 | 15010 | 15015 | 15020 | 15025 | 15030 | 15035 | 15040 | 15045 | 15050 |


#+BEGIN_SRC spice
RC circuit
r1 1 0 10k
c1 1 0 1p

.IC V(1)=1
.tran 1n 0.1u
.end

.control
run
set gnuplot_terminal=eps/quit
gnuplot nombre v(1)
.endc
#+END_SRC


#+BEGIN_SRC octave :results value :exports both 
gain=-10;
r1=10e3;
r2 = -gain*r1;
ans = [gain, r1, r2];
#+END_SRC

#+RESULTS:
| -10 | 10000 | 100000 |


# http://ergoemacs.org/emacs/elisp_examples.html
# https://github.com/imr/ngspice/blob/master/src/frontend/plotting/gnuplot.c
# https://tomwwolf.wordpress.com/modeling-simulation/ngspice-interactive-reference/
# https://tex.stackexchange.com/questions/339206/minted-doesnt-work-properly-random-characters-in-code  
# https://github.com/wose/ob-scad/issues/1
